#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>
#include <DNSServer.h>
#include <ESP8266mDNS.h>
//----DNS server----//
const byte DNS_PORT = 53;
DNSServer dnsServer;
// Instanciamos un servidor en el puerto 80 (puerto de HTTP)
ESP8266WebServer server(80);
//----Datos de los pines de la placa----//
int pinRELE = 4;
int pinLED = 2;
int incomingByte = 0;
//----Datos de la red y contraseña----//
const char* ssid = "LUMI19";
const char* password = "lumiuvcovid";  // para libre acceso, setear "" - clave mínima 8 caracteres
const char* WiFi_hostname = "LUMI";
//----Archivos conmprimidos convertidos a hexadecimal----//
const char index_html[] PROGMEM = {0x1F, 0x8B, 0x08, 0x08, 0xBB, 0xFD, 0x93, 0x5E, 0x04, 0x00, 0x69, 0x6E, 0x64, 0x65, 0x78, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x00, 0x75, 0x51, 0xC1, 0x6A, 0x02, 0x31, 0x14, 0x3C, 0x5B, 0xE8, 0x3F, 0xA4, 0x39, 0xD7, 0x5D, 0x3C, 0x16, 0xB2, 0x01, 0xD1, 0x45, 0x84, 0x6A, 0xC5, 0xB6, 0x87, 0x82, 0x20, 0xCF, 0xEC, 0xAB, 0x1B, 0x9A, 0x4D, 0x96, 0xE4, 0xE9, 0x56, 0xF0, 0xE3, 0x9B, 0x4D, 0xAD, 0xD0, 0x42, 0x4F, 0x6F, 0x32, 0x33, 0x4C, 0x26, 0x2F, 0xE2, 0x6E, 0xFA, 0x34, 0x79, 0x79, 0x5B, 0x95, 0xAC, 0xA6, 0xC6, 0xC8, 0xDB, 0x1B, 0x71, 0x9D, 0x08, 0x55, 0x9C, 0x03, 0x41, 0x9A, 0x0C, 0xCA, 0xC7, 0xD7, 0xC5, 0x5C, 0xE4, 0x09, 0x27, 0xB6, 0x41, 0x02, 0x66, 0xA1, 0xC1, 0x62, 0xC3, 0x8F, 0x1A, 0xBB, 0xD6, 0x79, 0xDA, 0x70, 0xA6, 0x9C, 0x25, 0xB4, 0x14, 0xC9, 0x4E, 0x57, 0x54, 0x17, 0x15, 0x1E, 0xB5, 0xC2, 0x61, 0x3A, 0xDC, 0x33, 0x6D, 0x35, 0x69, 0x30, 0xC3, 0xA0, 0xC0, 0x60, 0x31, 0xDA, 0xF0, 0x14, 0x65, 0xB4, 0xFD, 0x60, 0x1E, 0x4D, 0xC1, 0x03, 0x9D, 0x0C, 0x86, 0x1A, 0x91, 0x38, 0xA3, 0x53, 0x8B, 0x05, 0x27, 0xFC, 0xA4, 0x5C, 0x85, 0xC0, 0x59, 0xED, 0xF1, 0xBD, 0xE0, 0xE6, 0xD0, 0xE8, 0xE4, 0xCA, 0x7A, 0xB2, 0xEF, 0x99, 0x5F, 0x8A, 0x8A, 0x9D, 0xAB, 0x4E, 0x52, 0xCC, 0x17, 0x33, 0xF6, 0xBC, 0x9E, 0x44, 0xA7, 0xDB, 0xBB, 0x2D, 0x79, 0xB0, 0xA1, 0x05, 0x8F, 0xB1, 0x55, 0xD6, 0xDA, 0x3D, 0x97, 0x83, 0xE8, 0x6C, 0xE5, 0x99, 0x4D, 0x62, 0x51, 0xEF, 0x0C, 0x03, 0x56, 0xC5, 0x40, 0xB0, 0x4A, 0x03, 0xEB, 0xDF, 0xC8, 0x46, 0x0F, 0xEC, 0x2C, 0xF2, 0x56, 0xF6, 0xBE, 0x54, 0x0F, 0x2E, 0x57, 0xA3, 0x55, 0x68, 0x2B, 0xF4, 0x5C, 0x8A, 0xDD, 0x81, 0xC8, 0x59, 0xA6, 0x0C, 0x84, 0x50, 0xEC, 0x5C, 0xC4, 0xDB, 0x1F, 0x55, 0xB2, 0x72, 0x39, 0x29, 0x97, 0xD3, 0x72, 0x2D, 0xF2, 0x6F, 0x9B, 0x14, 0x39, 0xFC, 0x0A, 0x82, 0x16, 0xF6, 0xF0, 0x4F, 0x4C, 0xD2, 0x62, 0xC8, 0x78, 0x35, 0x9E, 0x8D, 0xFF, 0x46, 0x5C, 0x6B, 0x75, 0x5D, 0x97, 0xF5, 0x9B, 0x18, 0x1E, 0x8E, 0x99, 0x72, 0x4D, 0x06, 0xFE, 0x22, 0xE5, 0xFD, 0x12, 0x12, 0x48, 0xDF, 0xF8, 0x05, 0xB0, 0x7E, 0xEC, 0x18, 0xDE, 0x01, 0x00, 0x00, };
const char style_css[] PROGMEM = {0x1F, 0x8B, 0x08, 0x08, 0xAC, 0xFD, 0x93, 0x5E, 0x04, 0x00, 0x6C, 0x75, 0x6D, 0x69, 0x73, 0x74, 0x79, 0x6C, 0x65, 0x2E, 0x63, 0x73, 0x73, 0x00, 0xED, 0x52, 0xD1, 0x8E, 0x9B, 0x30, 0x10, 0x7C, 0x8F, 0x94, 0x7F, 0x58, 0xE9, 0x54, 0xE9, 0x22, 0x85, 0x13, 0x24, 0x41, 0x51, 0xC9, 0x0F, 0xF4, 0x2F, 0x2A, 0x83, 0x0D, 0xAC, 0x62, 0xBC, 0xC8, 0x18, 0x48, 0x1A, 0xF5, 0xDF, 0xBB, 0x26, 0x24, 0x81, 0xE6, 0xAA, 0xDE, 0xE3, 0x3D, 0x1C, 0xC6, 0x0F, 0xEC, 0xB0, 0xF6, 0xEC, 0xCC, 0x94, 0xAE, 0xD2, 0xCB, 0xC5, 0x65, 0xB9, 0x00, 0x7E, 0x24, 0x36, 0xB5, 0x16, 0xE7, 0x04, 0xD0, 0x68, 0x34, 0x2A, 0x48, 0x35, 0x65, 0xC7, 0x03, 0x5C, 0xC1, 0x4A, 0xD8, 0x02, 0x4D, 0x02, 0x61, 0xD7, 0x83, 0x68, 0x1D, 0xDD, 0xEA, 0x4E, 0x9D, 0x5C, 0x20, 0x34, 0x16, 0x8C, 0x65, 0xCA, 0x38, 0x65, 0x67, 0x88, 0x54, 0x19, 0x59, 0xE1, 0x90, 0x18, 0x36, 0x64, 0xD4, 0x0D, 0xCC, 0xC9, 0xB8, 0xA0, 0xC1, 0x5F, 0x2A, 0x81, 0x6D, 0xD7, 0xFF, 0x7D, 0x49, 0xF4, 0x28, 0x65, 0xAD, 0x6D, 0xC8, 0x26, 0x20, 0x55, 0x2E, 0x5A, 0xED, 0x0E, 0x93, 0xF6, 0x5C, 0x54, 0xA8, 0x99, 0xEE, 0x0F, 0xA5, 0x3B, 0xE5, 0x30, 0x13, 0x23, 0x98, 0x91, 0xF6, 0x1D, 0x2F, 0x79, 0xE4, 0xD7, 0xB4, 0xA3, 0x57, 0x58, 0x94, 0x2E, 0x81, 0x38, 0x0C, 0xB9, 0xFC, 0x7B, 0xB9, 0xF0, 0x2B, 0x25, 0x79, 0x86, 0xBB, 0x08, 0x3D, 0x4A, 0x57, 0x32, 0x83, 0x90, 0x07, 0x1D, 0x5B, 0x53, 0x91, 0x1D, 0x0B, 0x4B, 0xAD, 0x91, 0x89, 0x2D, 0xD2, 0xD7, 0x4D, 0xB8, 0x86, 0xBD, 0xDF, 0xF1, 0xEA, 0x7A, 0x08, 0x56, 0x05, 0x5C, 0x60, 0xD6, 0xBE, 0x7D, 0x74, 0xF3, 0xA5, 0xE9, 0x11, 0x99, 0x2D, 0x6A, 0xA7, 0xFC, 0x20, 0x96, 0xEA, 0xA0, 0x29, 0x85, 0xA4, 0xFE, 0xD5, 0xAB, 0x39, 0xEC, 0x98, 0xF7, 0x4B, 0x3E, 0x3C, 0xAB, 0xB1, 0xEF, 0xE3, 0xFF, 0xC3, 0xC0, 0xE2, 0x2D, 0x25, 0x47, 0xE6, 0xA7, 0x32, 0xEC, 0x82, 0x54, 0xF6, 0x3F, 0xAE, 0x4E, 0xD9, 0x6E, 0xF6, 0x77, 0xB2, 0xE5, 0x20, 0xD0, 0xB4, 0x92, 0x92, 0xE5, 0xD3, 0x02, 0x2B, 0x24, 0xB6, 0x8D, 0x57, 0xEE, 0xDB, 0x61, 0xE6, 0x55, 0x34, 0xFF, 0x0E, 0x1C, 0xD5, 0x57, 0xFF, 0x9E, 0xC5, 0x63, 0xC6, 0xB1, 0x5F, 0x23, 0x42, 0x9D, 0xB2, 0xB9, 0xA6, 0x3E, 0x81, 0x12, 0xA5, 0x54, 0xE6, 0x7E, 0xE1, 0x69, 0x1C, 0x97, 0xC3, 0xC6, 0x6B, 0x5B, 0x9F, 0xA0, 0xB0, 0xE2, 0x3C, 0xE3, 0x93, 0xC0, 0x86, 0xCB, 0x0D, 0x69, 0x94, 0xE0, 0x3D, 0x89, 0xC3, 0xF5, 0xF0, 0xAE, 0x66, 0x11, 0x98, 0x23, 0x4F, 0x79, 0xBD, 0xC6, 0x75, 0xAC, 0x33, 0x19, 0x1F, 0x21, 0x3D, 0x62, 0x2C, 0xA6, 0xA3, 0x6A, 0x92, 0x1D, 0xF6, 0xF4, 0xCD, 0xAB, 0xFE, 0x08, 0xDB, 0x73, 0xAE, 0x98, 0x9C, 0x96, 0x87, 0xF7, 0xD3, 0xEF, 0xC3, 0xCF, 0xD0, 0x7B, 0x56, 0x25, 0x22, 0x73, 0xD8, 0x29, 0xB8, 0x3C, 0x29, 0x36, 0xCC, 0xB6, 0x8F, 0xD6, 0xB0, 0xD9, 0xC5, 0x6B, 0x88, 0x76, 0x3B, 0x3F, 0xC5, 0xE3, 0x00, 0x51, 0x8B, 0x42, 0x7C, 0x39, 0xFD, 0x89, 0x9D, 0x9E, 0x5B, 0x75, 0x73, 0xFA, 0x1F, 0x46, 0x0F, 0x26, 0x7F, 0x67, 0xB7, 0xF7, 0xD1, 0x8A, 0xBB, 0xFF, 0x00, 0x8E, 0x36, 0xA5, 0x4C, 0x9C, 0x05, 0x00, 0x00, };
const char lumi_logo[] PROGMEM = {0x1F, 0x8B, 0x08, 0x08, 0x71, 0xEC, 0x93, 0x5E, 0x04, 0x00, 0x6C, 0x6F, 0x67, 0x6F, 0x5F, 0x74, 0x72, 0x61, 0x6E, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6E, 0x74, 0x65, 0x2E, 0x70, 0x6E, 0x67, 0x00, 0x01, 0x89, 0x0A, 0x76, 0xF5, 0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x01, 0x0A, 0x00, 0x00, 0x00, 0xE8, 0x04, 0x03, 0x00, 0x00, 0x00, 0xE5, 0x1E, 0xB7, 0xC7, 0x00, 0x00, 0x00, 0x15, 0x50, 0x4C, 0x54, 0x45, 0x34, 0x36, 0x36, 0x47, 0x70, 0x4C, 0x35, 0x35, 0x35, 0x34, 0x37, 0x36, 0x30, 0x52, 0x4F, 0x0A, 0xF5, 0xE0, 0x1A, 0xAE, 0xA1, 0xF9, 0xA9, 0xE0, 0x89, 0x00, 0x00, 0x00, 0x05, 0x74, 0x52, 0x4E, 0x53, 0xFF, 0x00, 0xBE, 0x3F, 0x7B, 0x58, 0xC6, 0x90, 0xAF, 0x00, 0x00, 0x0A, 0x1E, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xED, 0x9C, 0xC1, 0x76, 0xAC, 0x2A, 0x16, 0x86, 0xB7, 0x68, 0x6A, 0xEC, 0x2F, 0xDC, 0x39, 0x5A, 0xF5, 0x00, 0x52, 0xA4, 0xE7, 0x90, 0xD8, 0xF3, 0x9C, 0xB5, 0xAE, 0x35, 0xCE, 0x24, 0x79, 0xFF, 0x47, 0xE8, 0x01, 0x82, 0xA0, 0x7A, 0x92, 0x75, 0x6E, 0x95, 0xA6, 0xEF, 0xD2, 0x49, 0x52, 0xB8, 0x85, 0x0F, 0xD8, 0xBF, 0x6C, 0x14, 0x24, 0xFC, 0x84, 0x83, 0x76, 0x2C, 0xBB, 0xFF, 0x05, 0xD1, 0xDB, 0x9D, 0x29, 0x44, 0xFF, 0x37, 0xFE, 0xEA, 0x7F, 0x1D, 0x14, 0x07, 0xC5, 0x78, 0x70, 0x35, 0x52, 0xA8, 0xDD, 0x28, 0xFA, 0xBF, 0x03, 0xC5, 0x5F, 0xBD, 0xDA, 0x8D, 0xA2, 0x0F, 0x14, 0xFF, 0xED, 0xED, 0x41, 0x71, 0x50, 0x1C, 0x14, 0x07, 0xC5, 0x41, 0x71, 0x50, 0x1C, 0x14, 0x77, 0xA0, 0xF8, 0xCF, 0x7E, 0x14, 0xC2, 0x06, 0x0A, 0xDE, 0x1D, 0x71, 0xE7, 0x41, 0xF1, 0xD3, 0x28, 0x78, 0xFF, 0xEB, 0x07, 0x50, 0xE0, 0x19, 0x40, 0xB7, 0xFB, 0x6C, 0xF9, 0x67, 0xCC, 0xD9, 0x0F, 0x8A, 0x83, 0xE2, 0xFF, 0x87, 0x82, 0x6B, 0xBD, 0x6A, 0xA1, 0xB5, 0xFA, 0x76, 0xFA, 0x9A, 0xED, 0xCA, 0x39, 0xEE, 0x93, 0x08, 0x00, 0x5E, 0x88, 0x88, 0x2D, 0x5F, 0x2F, 0x24, 0x11, 0x9D, 0x17, 0x6E, 0x7C, 0x92, 0x88, 0x2E, 0xEA, 0x5B, 0xB6, 0x6B, 0xF6, 0x63, 0xB1, 0x04, 0xC0, 0x10, 0xAD, 0x61, 0x08, 0x22, 0x5A, 0xCC, 0x5A, 0x12, 0x11, 0x51, 0xF1, 0x2D, 0xDB, 0x15, 0xFB, 0xA8, 0x58, 0x02, 0x2A, 0x77, 0x75, 0x6A, 0x92, 0x5C, 0x4C, 0x64, 0x27, 0xE9, 0xED, 0x90, 0x9E, 0x7F, 0xC3, 0x76, 0xC5, 0x3E, 0x2E, 0x96, 0xC6, 0xAB, 0xA9, 0x9E, 0x5D, 0xEC, 0x2D, 0x89, 0x2D, 0x36, 0x11, 0x11, 0x8D, 0x0D, 0x58, 0xAE, 0xD8, 0xAE, 0xD8, 0xF3, 0x90, 0x64, 0x01, 0x1A, 0x4B, 0x5A, 0x68, 0x0C, 0x19, 0x9B, 0x2E, 0x54, 0x8D, 0x28, 0xFB, 0xD2, 0x76, 0xC5, 0x3E, 0x29, 0x96, 0x86, 0xEE, 0x99, 0x54, 0x6C, 0x5A, 0x85, 0xA4, 0xE9, 0x81, 0x31, 0x9D, 0x7D, 0x69, 0xBB, 0x62, 0x2F, 0xE3, 0x62, 0x69, 0x6C, 0x99, 0x79, 0x97, 0xB4, 0x0B, 0x57, 0x4F, 0x4A, 0x0C, 0x15, 0x5F, 0xB3, 0x4D, 0xEB, 0x1D, 0xEC, 0xD3, 0x62, 0x29, 0xB6, 0xC8, 0x57, 0x3B, 0x24, 0x6D, 0xA7, 0x72, 0x81, 0x7C, 0xCD, 0x76, 0x42, 0xE8, 0xED, 0xD3, 0x62, 0x29, 0xCE, 0x91, 0xAD, 0x36, 0x64, 0xDA, 0x4E, 0x66, 0x81, 0x3C, 0xB6, 0xCD, 0x7E, 0x53, 0x9B, 0x7C, 0x0E, 0xC6, 0x40, 0xF1, 0x4F, 0x5A, 0x75, 0x8B, 0x34, 0xE7, 0x38, 0xD7, 0x62, 0xC1, 0x76, 0xE2, 0xE6, 0x7C, 0xE1, 0x9C, 0x49, 0x29, 0xCC, 0x1F, 0x50, 0xD0, 0xBC, 0xFD, 0x12, 0xDB, 0x49, 0x3E, 0xE5, 0x82, 0x7D, 0x5A, 0x2C, 0xB9, 0x7A, 0x9D, 0x96, 0x3A, 0x74, 0xE8, 0xBB, 0xF7, 0x99, 0xCF, 0xB8, 0xF4, 0xCF, 0x38, 0x57, 0x67, 0x7B, 0x7A, 0x5F, 0x72, 0x73, 0xB3, 0x60, 0x9F, 0x16, 0x3B, 0x50, 0xF4, 0xEF, 0xAB, 0x14, 0x4F, 0xB7, 0x65, 0x8A, 0x53, 0x1F, 0xD7, 0x7B, 0xB0, 0xED, 0xD7, 0x75, 0x9D, 0xDA, 0xA7, 0xC5, 0xFE, 0x13, 0x8A, 0xF7, 0x05, 0x8A, 0xF7, 0x55, 0x5D, 0x7F, 0x24, 0xF6, 0x8F, 0xA5, 0x78, 0x9B, 0x77, 0xED, 0xE0, 0xFF, 0xFD, 0x86, 0x14, 0xB7, 0x35, 0x45, 0x9D, 0xB6, 0xA4, 0xE8, 0x67, 0x5A, 0x1D, 0x74, 0xFA, 0xB4, 0x29, 0xC5, 0xFB, 0x54, 0xAB, 0xA5, 0x77, 0x8B, 0x2D, 0x29, 0x6E, 0xD3, 0x71, 0xD5, 0x78, 0xB7, 0xD8, 0x8E, 0xE2, 0xF6, 0x31, 0xD3, 0xAA, 0xD7, 0xE9, 0xE7, 0x86, 0x14, 0x33, 0xAD, 0x06, 0x9D, 0x9E, 0x36, 0xA4, 0x38, 0x4D, 0xB5, 0xEA, 0x75, 0x7A, 0xDB, 0x92, 0x82, 0xA6, 0x5A, 0xF5, 0x3A, 0x7D, 0xDB, 0x94, 0xE2, 0x23, 0xD5, 0x6A, 0xD0, 0xE9, 0xFB, 0xA6, 0x14, 0xA7, 0x54, 0xAB, 0x41, 0xA7, 0xB4, 0x29, 0x05, 0x79, 0xC7, 0xB0, 0x89, 0x4E, 0x6F, 0x1B, 0x53, 0xA4, 0x5A, 0xA5, 0x60, 0xBB, 0x2D, 0x45, 0xA2, 0xD5, 0xA0, 0x53, 0xDA, 0x98, 0x22, 0xD1, 0x6A, 0xD0, 0xE9, 0xD6, 0x14, 0x89, 0x56, 0x83, 0x4E, 0x37, 0xA7, 0x88, 0xB4, 0x3A, 0xEA, 0x74, 0x73, 0x8A, 0x48, 0xAB, 0xD5, 0xE8, 0x16, 0x5B, 0x53, 0x44, 0x5A, 0x1D, 0x75, 0xBA, 0x3D, 0xC5, 0xA8, 0x55, 0x8A, 0x2C, 0xB7, 0xA6, 0x08, 0x5A, 0x15, 0x14, 0x45, 0xE6, 0x5B, 0x53, 0x04, 0xAD, 0xC6, 0x1D, 0xB2, 0x39, 0x45, 0xD0, 0x2A, 0x51, 0x04, 0xB5, 0x39, 0x85, 0x77, 0x0C, 0x8A, 0x27, 0x29, 0x9B, 0x53, 0x04, 0xAD, 0xC6, 0x4C, 0x9B, 0x53, 0x04, 0xAD, 0xC6, 0xFD, 0xB3, 0x3D, 0x45, 0xDC, 0x25, 0xDE, 0x6E, 0x7B, 0x8A, 0xA7, 0xA8, 0x4B, 0xFC, 0x0C, 0x7A, 0x7B, 0x8A, 0x53, 0xD4, 0x25, 0xFD, 0x6D, 0x2F, 0x8A, 0x48, 0xAB, 0x01, 0x68, 0x07, 0x8A, 0xD1, 0x31, 0x42, 0xE7, 0xEC, 0x40, 0x31, 0x6A, 0x35, 0xF0, 0xEC, 0x40, 0x31, 0x6A, 0xB5, 0xBF, 0xED, 0x48, 0xF1, 0xD1, 0x4F, 0xFD, 0x74, 0x0F, 0x0A, 0xEF, 0x0E, 0x4F, 0x3D, 0xED, 0x48, 0xE1, 0xDB, 0x20, 0x16, 0xCB, 0xF6, 0x14, 0x61, 0x38, 0x7F, 0xDB, 0x95, 0xC2, 0x39, 0x46, 0x74, 0x13, 0xDD, 0x85, 0xC2, 0x95, 0x1F, 0x0D, 0x28, 0xBB, 0x50, 0x38, 0xAD, 0x46, 0xF1, 0xCE, 0x3E, 0x14, 0x6E, 0x56, 0xF8, 0xB6, 0x33, 0xC5, 0x53, 0xFF, 0x1E, 0xE9, 0x74, 0x2F, 0x8A, 0x53, 0xFF, 0x96, 0x04, 0xA0, 0xFB, 0x50, 0x50, 0x7F, 0x8B, 0x3B, 0x64, 0x2F, 0x8A, 0x8F, 0x3E, 0x0E, 0x76, 0xF6, 0xA2, 0x78, 0xEA, 0xFB, 0x9E, 0x76, 0xA7, 0xA0, 0x3E, 0x99, 0x97, 0xEC, 0x45, 0xF1, 0x91, 0x84, 0xE2, 0x9B, 0x53, 0xB0, 0x34, 0xEE, 0x2D, 0xF6, 0xA1, 0xC8, 0x87, 0x47, 0x38, 0x9F, 0xC3, 0x43, 0x9D, 0x9D, 0x28, 0x92, 0xD7, 0xA3, 0x64, 0x77, 0xA2, 0xA8, 0xD2, 0x77, 0x97, 0x3B, 0x51, 0x24, 0xEF, 0x71, 0xF3, 0xBD, 0x28, 0x92, 0x97, 0xB6, 0xF5, 0x6E, 0x14, 0x65, 0xF2, 0xA2, 0x79, 0x2F, 0x0A, 0x91, 0xBC, 0x58, 0xDF, 0x8B, 0x22, 0x5A, 0x10, 0x50, 0xEF, 0x48, 0x91, 0xAC, 0xE8, 0xD9, 0x8D, 0x22, 0x34, 0x46, 0xBD, 0x2B, 0x85, 0x88, 0x5E, 0x19, 0xED, 0x47, 0xE1, 0x56, 0xB2, 0x15, 0xD8, 0x99, 0x02, 0x78, 0xEE, 0x34, 0xF6, 0xA7, 0xF8, 0x9D, 0xFD, 0x41, 0x71, 0x50, 0x1C, 0x14, 0x07, 0xC5, 0x41, 0x71, 0x50, 0x1C, 0x14, 0x07, 0xC5, 0x41, 0x71, 0x50, 0x1C, 0x14, 0x07, 0xC5, 0x41, 0x71, 0x50, 0xFC, 0xBB, 0x28, 0xF8, 0x1E, 0x14, 0x7D, 0xBC, 0x82, 0x36, 0xA6, 0x88, 0x17, 0x3B, 0x3F, 0x8E, 0x42, 0xC4, 0x14, 0x6C, 0x9A, 0xBE, 0x0B, 0xC5, 0x6C, 0xCD, 0xFD, 0xD3, 0xA6, 0x14, 0xFE, 0xEA, 0xE9, 0x9A, 0xFB, 0xB4, 0xA7, 0x1E, 0x47, 0x91, 0x7A, 0x61, 0x36, 0x59, 0x73, 0xFF, 0x71, 0xDB, 0x86, 0x02, 0xC9, 0x82, 0x0E, 0x36, 0xD9, 0x6E, 0xF4, 0x91, 0x94, 0xB8, 0x15, 0xC5, 0x74, 0x7F, 0xDB, 0x90, 0x9C, 0x3D, 0x9C, 0x42, 0xC6, 0x95, 0xF6, 0x1B, 0x58, 0xAB, 0xF4, 0x35, 0x58, 0xFD, 0x70, 0x0A, 0x93, 0x2E, 0x27, 0x29, 0xE2, 0x8D, 0x65, 0x4F, 0xA9, 0xD3, 0xDE, 0x93, 0xE2, 0x55, 0x0F, 0x87, 0x8A, 0x24, 0x39, 0xAE, 0x37, 0x62, 0xAF, 0xFA, 0x65, 0xBA, 0xF0, 0x46, 0xDD, 0x9F, 0x62, 0x3C, 0x2E, 0x51, 0xE3, 0x27, 0x2F, 0x24, 0xA7, 0x4B, 0xD2, 0xF0, 0x48, 0x0A, 0x2A, 0xD2, 0x95, 0xED, 0xD3, 0xE3, 0x34, 0x51, 0xCE, 0x83, 0x28, 0xE8, 0x1C, 0x44, 0xF2, 0xB4, 0x70, 0x76, 0xBA, 0x73, 0xE7, 0x51, 0x14, 0xA4, 0xC6, 0xA5, 0xED, 0xB7, 0x79, 0x53, 0xDC, 0x52, 0xF9, 0x3E, 0x8C, 0x22, 0x8B, 0x76, 0x7F, 0xBC, 0xCF, 0x9A, 0x62, 0x48, 0xB1, 0x8F, 0xA6, 0x60, 0xD1, 0xBD, 0xE1, 0x36, 0x6D, 0x8A, 0x9E, 0xD2, 0x31, 0xEE, 0x61, 0x14, 0x64, 0xC3, 0x4E, 0xD4, 0x7E, 0x72, 0x3E, 0xBC, 0xC7, 0xCF, 0x1F, 0x4F, 0x51, 0x87, 0xAD, 0x30, 0xA7, 0x64, 0x25, 0x45, 0xF4, 0xB3, 0x7E, 0x3C, 0x45, 0x3E, 0x6E, 0xB3, 0xFD, 0x48, 0x57, 0xD8, 0x04, 0x73, 0xF5, 0x78, 0x8A, 0x71, 0xEB, 0x05, 0x9D, 0xFA, 0x78, 0x41, 0x5E, 0xF8, 0xBF, 0xC0, 0xE3, 0x29, 0x58, 0xB4, 0xBF, 0xF8, 0x14, 0xF6, 0x11, 0x7E, 0x46, 0x0B, 0x5D, 0xEA, 0x3B, 0x53, 0xDC, 0x3E, 0x93, 0x23, 0x08, 0xA0, 0x8A, 0x57, 0xD9, 0xF4, 0xB7, 0xCF, 0x8F, 0xBE, 0x8F, 0x5C, 0x15, 0x77, 0xA6, 0x98, 0x1C, 0x63, 0x21, 0xB1, 0x37, 0xB8, 0xE3, 0xF6, 0x1E, 0x39, 0xCE, 0x46, 0x14, 0xD1, 0x82, 0x8E, 0x4F, 0xD7, 0x1C, 0x89, 0x94, 0x53, 0x8A, 0xD3, 0xDB, 0x3A, 0x05, 0x25, 0xC3, 0xDF, 0x10, 0xBA, 0x0C, 0x3E, 0x9E, 0xEE, 0x67, 0x9F, 0xFB, 0x45, 0xBA, 0x25, 0x7E, 0x3E, 0xE0, 0x4D, 0xC2, 0x40, 0xFA, 0x0D, 0x05, 0xC5, 0xC3, 0x9F, 0x4C, 0xC6, 0x8A, 0x2F, 0x29, 0xD0, 0xAE, 0x9E, 0xB7, 0xDF, 0xD9, 0x81, 0xBF, 0x42, 0x91, 0x14, 0x3B, 0xF9, 0xC2, 0xC0, 0x52, 0x5D, 0x57, 0x1B, 0x23, 0x9F, 0xC7, 0xEB, 0x33, 0xE9, 0xCC, 0x2B, 0xBE, 0xFC, 0x9D, 0x83, 0x72, 0x9D, 0x22, 0x5B, 0x68, 0xEC, 0x74, 0xCC, 0x5D, 0xA9, 0xEF, 0xDA, 0xF7, 0x4B, 0xA2, 0x4C, 0xCB, 0xA4, 0xB6, 0x24, 0xD6, 0x29, 0x6A, 0x2C, 0xB4, 0xDE, 0x5A, 0x85, 0x4D, 0xB2, 0xFA, 0x24, 0x3D, 0x16, 0xBE, 0x54, 0x21, 0x12, 0x30, 0xC2, 0x3A, 0xC5, 0x62, 0x6B, 0x2F, 0xB9, 0xE6, 0xA4, 0xA4, 0xD9, 0x97, 0x4D, 0xF8, 0x42, 0xA6, 0x49, 0xD3, 0xD1, 0xBA, 0xF7, 0x15, 0xCB, 0xAE, 0x97, 0x4C, 0x0B, 0x16, 0x4B, 0x9A, 0x7F, 0xE5, 0x45, 0xCE, 0x33, 0x6D, 0x63, 0x7F, 0x25, 0x88, 0xAF, 0x3A, 0x64, 0xC9, 0x35, 0x16, 0x3E, 0xAE, 0x63, 0x26, 0x2A, 0xC0, 0xA2, 0x8E, 0xEB, 0x79, 0xCD, 0x6A, 0x80, 0xD6, 0xBA, 0x3D, 0xCD, 0xAC, 0xFA, 0x12, 0x62, 0xCC, 0x76, 0xDE, 0x14, 0x63, 0x63, 0xB0, 0x39, 0x35, 0x03, 0x40, 0xAB, 0x52, 0x4C, 0x1D, 0x5D, 0xC4, 0x6A, 0x2B, 0x16, 0x20, 0x42, 0x1B, 0xB3, 0xA5, 0x73, 0x62, 0x9E, 0x29, 0x8F, 0x92, 0x68, 0xB9, 0xDB, 0xE7, 0x6A, 0xE3, 0x61, 0x3E, 0xC4, 0x5E, 0xB1, 0x7C, 0x98, 0xB5, 0x66, 0x02, 0x70, 0x9D, 0x67, 0x2A, 0x42, 0xA8, 0x0F, 0x02, 0x00, 0xFE, 0xD2, 0x4C, 0x8E, 0xCB, 0x42, 0x5E, 0xFC, 0xF9, 0xA5, 0x69, 0x9A, 0x6E, 0xFD, 0xEB, 0x53, 0x78, 0x6E, 0x9A, 0x4E, 0xAD, 0x9C, 0x13, 0x2F, 0xB3, 0x4C, 0xF9, 0x4B, 0x73, 0x71, 0x35, 0x3A, 0xBE, 0xF2, 0x75, 0x50, 0x1C, 0x14, 0x07, 0xC5, 0x41, 0xB1, 0x2D, 0x85, 0xFA, 0x09, 0x14, 0x55, 0xF6, 0x13, 0x28, 0xE4, 0x8F, 0x68, 0x8B, 0xF3, 0x1D, 0xFD, 0x82, 0xBB, 0x47, 0xAC, 0x5A, 0x6B, 0x0D, 0xF0, 0xAE, 0x03, 0xA0, 0x20, 0x5C, 0xB7, 0x73, 0xAD, 0xB5, 0x3F, 0x85, 0xE7, 0xCE, 0x02, 0xE0, 0xCF, 0x9D, 0x02, 0xDC, 0xEF, 0x0E, 0xF0, 0x96, 0x00, 0x2C, 0xB8, 0xFB, 0x5F, 0x6B, 0xAD, 0x35, 0xB8, 0xD6, 0x5A, 0x41, 0x03, 0x00, 0x07, 0xC0, 0xBB, 0x4E, 0x21, 0x4A, 0x14, 0xE0, 0xEE, 0xE9, 0x2E, 0xD7, 0x5A, 0xBB, 0x59, 0xD1, 0xF0, 0xE8, 0xC8, 0x42, 0x12, 0x15, 0x10, 0x39, 0x8C, 0x02, 0xAA, 0x0C, 0x92, 0x88, 0xAC, 0x70, 0xF1, 0x93, 0x71, 0x76, 0x86, 0x88, 0x14, 0xA4, 0x8B, 0x01, 0x0B, 0xC0, 0x58, 0x40, 0x64, 0x00, 0xAA, 0x02, 0x26, 0x03, 0xAA, 0x61, 0x8F, 0x80, 0x32, 0x6E, 0x6D, 0xBE, 0x02, 0xD0, 0xD6, 0xE0, 0x2E, 0xFE, 0x69, 0xDD, 0xEC, 0xC3, 0x02, 0xA6, 0x6E, 0x5D, 0x60, 0x26, 0x89, 0xA8, 0xA6, 0xF6, 0xAC, 0x0D, 0x03, 0x98, 0xD6, 0x1A, 0x82, 0x29, 0x41, 0x4A, 0xE4, 0x2E, 0xBF, 0x6C, 0x48, 0xCC, 0xB5, 0xD6, 0x10, 0xF4, 0x0A, 0x53, 0xA0, 0x62, 0x96, 0x9B, 0x1C, 0x12, 0x90, 0x67, 0x3C, 0x93, 0x85, 0xC9, 0x07, 0x8A, 0x92, 0x41, 0x32, 0xA0, 0x2D, 0x5C, 0x08, 0xA5, 0xA4, 0xDB, 0x2F, 0x60, 0x01, 0x98, 0xDC, 0x45, 0x83, 0xAE, 0x5A, 0x39, 0xA7, 0x0C, 0x90, 0x99, 0xA3, 0xE0, 0xE4, 0x28, 0x2C, 0x20, 0x2D, 0x18, 0x00, 0x94, 0x19, 0xD0, 0x5A, 0x91, 0xC3, 0x30, 0x47, 0x01, 0x0C, 0x65, 0xA0, 0xCC, 0x01, 0x5C, 0x60, 0x6A, 0x80, 0xE7, 0x90, 0x10, 0xCC, 0x25, 0x1A, 0x16, 0x51, 0x90, 0x45, 0x5B, 0x40, 0x5F, 0xE9, 0x55, 0x43, 0xE6, 0x5A, 0x23, 0x50, 0x10, 0x53, 0x5C, 0x16, 0x3E, 0x91, 0x01, 0x32, 0x83, 0x36, 0x4C, 0x2B, 0x4E, 0x67, 0xAD, 0x41, 0xAD, 0x05, 0xCA, 0xA1, 0xC0, 0xB2, 0x06, 0x00, 0x91, 0xC3, 0x48, 0x35, 0xA1, 0x30, 0x36, 0xD6, 0x85, 0x44, 0x99, 0x01, 0x10, 0x0C, 0x86, 0x6C, 0x44, 0x91, 0xA1, 0x2D, 0x00, 0x41, 0x0A, 0x90, 0x19, 0x10, 0x28, 0x04, 0xD5, 0x80, 0xB0, 0x3E, 0x91, 0xDC, 0x7F, 0x6D, 0xE1, 0x2D, 0xA8, 0xB5, 0x40, 0x95, 0xBB, 0x02, 0xAB, 0xC2, 0x53, 0xB4, 0xD9, 0x84, 0x42, 0x3A, 0x67, 0xF6, 0xF3, 0x7E, 0xB4, 0x16, 0x00, 0x08, 0xA6, 0xCD, 0x23, 0x0A, 0xB6, 0x42, 0x51, 0x0D, 0x93, 0x5A, 0x4F, 0x91, 0x2F, 0x51, 0x88, 0x81, 0x82, 0xD3, 0x65, 0xA0, 0x10, 0x6C, 0x42, 0xE1, 0x8A, 0xE7, 0x85, 0xA7, 0x70, 0x6D, 0x23, 0x61, 0x34, 0x8B, 0x28, 0xC8, 0x8E, 0x14, 0xB9, 0x56, 0x11, 0xC5, 0x70, 0x9D, 0x4B, 0x94, 0x2C, 0xA2, 0x38, 0x6B, 0xE5, 0x28, 0x78, 0x01, 0x6A, 0x9A, 0x1A, 0xB8, 0x12, 0x53, 0x10, 0x39, 0x0C, 0xA4, 0xAA, 0x32, 0x50, 0xD7, 0x59, 0x08, 0xD6, 0x34, 0x6A, 0x4E, 0xA1, 0xFC, 0x5F, 0x69, 0x03, 0x45, 0x4E, 0xF9, 0x48, 0x41, 0xC4, 0x02, 0x45, 0x49, 0x40, 0xD7, 0x59, 0x9F, 0x78, 0x25, 0x3B, 0x52, 0x10, 0xE5, 0x13, 0x0A, 0x3C, 0x4B, 0xE6, 0x28, 0xDA, 0xAC, 0xCA, 0x40, 0x44, 0xF5, 0x97, 0x14, 0x65, 0x1E, 0x28, 0x32, 0xC3, 0x56, 0x29, 0xC4, 0x20, 0x4B, 0x06, 0x4E, 0x9A, 0xF2, 0x05, 0x0A, 0x51, 0xF8, 0x0E, 0x07, 0x97, 0x56, 0xE4, 0x30, 0x10, 0xEC, 0x8B, 0x1E, 0x09, 0x14, 0x9C, 0x8D, 0x14, 0x15, 0xC9, 0xD5, 0x1E, 0x69, 0x24, 0xF9, 0x44, 0x65, 0x28, 0xEE, 0x91, 0x89, 0x5F, 0x38, 0x9D, 0x88, 0x1C, 0x06, 0x90, 0xD7, 0x84, 0x82, 0x00, 0x00, 0x7C, 0xEE, 0x9D, 0x0A, 0xB2, 0x0B, 0x14, 0x9C, 0x68, 0xDD, 0x3B, 0x2B, 0xF2, 0x89, 0xAA, 0x22, 0x9A, 0x7B, 0xA7, 0x57, 0x2A, 0x07, 0x50, 0x65, 0x8E, 0xA2, 0x65, 0xA9, 0x46, 0xBC, 0x44, 0x63, 0xA5, 0x72, 0x06, 0xA3, 0x50, 0xB2, 0x40, 0x01, 0x43, 0xEB, 0x4A, 0x8D, 0x28, 0xB0, 0x44, 0xE1, 0xEF, 0x5A, 0x46, 0x8D, 0x6D, 0x21, 0x28, 0xA1, 0x68, 0xEB, 0x70, 0xD7, 0x42, 0x0E, 0xE9, 0x44, 0x5D, 0xE6, 0x30, 0x0A, 0x9C, 0x46, 0x8A, 0x6A, 0x4A, 0x71, 0xD6, 0x1A, 0x26, 0xE7, 0x54, 0x00, 0x26, 0xA2, 0x68, 0xA7, 0x14, 0xD1, 0x1D, 0xBC, 0x2D, 0x82, 0x5F, 0x00, 0xD2, 0x53, 0xE4, 0x5A, 0x6B, 0x54, 0x4C, 0xE1, 0x5A, 0xA0, 0x62, 0x0A, 0xEE, 0x0E, 0x4E, 0x67, 0x70, 0xAA, 0x61, 0x7C, 0x81, 0x8E, 0x02, 0x14, 0x79, 0x27, 0x15, 0xDC, 0x0D, 0x29, 0x39, 0x0C, 0x31, 0x49, 0x85, 0x4F, 0x54, 0xA8, 0x28, 0xF2, 0x4E, 0xAA, 0xA9, 0x1D, 0xB7, 0xFE, 0xD4, 0x9C, 0x88, 0x06, 0x8D, 0x00, 0xAD, 0xA7, 0x70, 0xCF, 0x81, 0x86, 0xD1, 0x4C, 0xFA, 0xD1, 0xEC, 0x3A, 0x8C, 0x66, 0xCA, 0xDD, 0xF8, 0x51, 0x15, 0x30, 0x35, 0xD0, 0xE6, 0x00, 0xF7, 0x9F, 0x32, 0x76, 0x14, 0xB6, 0xAD, 0x5D, 0x26, 0xD6, 0x27, 0x02, 0xA0, 0x1A, 0xA8, 0xF2, 0x40, 0xE1, 0x86, 0x5C, 0x3C, 0x77, 0x5D, 0xA7, 0xC0, 0x9B, 0x8B, 0xF2, 0x63, 0x34, 0x1F, 0xC6, 0x65, 0x74, 0x5D, 0xF7, 0x0A, 0xF0, 0x97, 0xE6, 0xD5, 0xCD, 0xB3, 0xED, 0x30, 0xB2, 0x37, 0x17, 0xE5, 0x46, 0x76, 0x3E, 0x8C, 0xEC, 0xE1, 0x7F, 0xED, 0x86, 0xF2, 0xCE, 0xE2, 0xB9, 0xEB, 0x5E, 0xC1, 0x01, 0x88, 0xE6, 0x62, 0x7D, 0xA2, 0x8E, 0x23, 0x82, 0xE7, 0xAE, 0xEB, 0x8E, 0x18, 0xFC, 0xA0, 0xF8, 0x57, 0x52, 0xF0, 0xDF, 0x4C, 0x93, 0xF8, 0xAA, 0xC9, 0x9F, 0x53, 0xBC, 0x34, 0xCD, 0x2B, 0x20, 0x9A, 0xA6, 0xB9, 0x0C, 0x3F, 0x1B, 0x85, 0x2B, 0x91, 0x05, 0x6F, 0x9A, 0xC6, 0x02, 0xFC, 0x32, 0x3C, 0xC6, 0x2B, 0x80, 0x17, 0xF7, 0x5D, 0x74, 0x0B, 0x40, 0xAE, 0x3D, 0xF0, 0xFB, 0x23, 0x0A, 0x6A, 0x24, 0x59, 0x54, 0x6C, 0xA0, 0xA0, 0xA6, 0x69, 0x94, 0xA0, 0x8B, 0x61, 0x10, 0xAC, 0x91, 0x0C, 0x10, 0xEE, 0x79, 0xE5, 0xA5, 0xA3, 0x1A, 0x12, 0x30, 0xAC, 0x33, 0xA4, 0x50, 0xB1, 0x4E, 0x16, 0xF7, 0xA3, 0x60, 0x40, 0x5B, 0x8C, 0x13, 0x42, 0x17, 0x1C, 0xE6, 0x80, 0x8B, 0x6F, 0xA4, 0x45, 0x49, 0xD6, 0xDD, 0x8F, 0xAB, 0x02, 0x12, 0x9C, 0x14, 0x60, 0x6A, 0x98, 0xDA, 0xDD, 0x45, 0xEF, 0x47, 0x01, 0x9A, 0x50, 0x94, 0x35, 0xC0, 0x21, 0x32, 0xA0, 0xAC, 0xD1, 0xCA, 0x1A, 0x90, 0x16, 0x80, 0x85, 0x44, 0x95, 0x03, 0x10, 0x05, 0xCC, 0x30, 0x7D, 0xBA, 0x23, 0x85, 0xB1, 0x13, 0x8A, 0xCC, 0x8F, 0xB7, 0x65, 0x0D, 0x79, 0xCD, 0x43, 0x4E, 0xD2, 0x0D, 0xBF, 0x9C, 0xF9, 0xB0, 0xFD, 0x9E, 0x14, 0xED, 0x84, 0xA2, 0x62, 0x6A, 0xA0, 0x68, 0x6B, 0x30, 0x5E, 0x44, 0x01, 0x90, 0x0F, 0x8C, 0xCB, 0x42, 0xDD, 0x9B, 0xA2, 0xAC, 0xAB, 0x5C, 0x6B, 0x00, 0x00, 0xD3, 0x5A, 0x01, 0x92, 0x5E, 0x1D, 0x85, 0xB4, 0xA2, 0x00, 0x2D, 0x04, 0x83, 0x9C, 0x98, 0xBD, 0x3F, 0x85, 0x7F, 0x55, 0xE6, 0x42, 0x01, 0x2E, 0xE9, 0x3C, 0x68, 0xA4, 0xCA, 0x60, 0xEC, 0x94, 0xC2, 0x28, 0x08, 0x49, 0xF6, 0xC1, 0x6D, 0x01, 0x5C, 0x09, 0x82, 0x35, 0x8D, 0x45, 0x5B, 0xA3, 0xAD, 0x67, 0x6D, 0xA1, 0x00, 0x6E, 0x8A, 0xC7, 0xFA, 0x05, 0x00, 0x98, 0x7A, 0x88, 0x49, 0x89, 0x28, 0x9F, 0xFB, 0x05, 0x00, 0x90, 0x7A, 0xA8, 0x46, 0x86, 0x70, 0xDD, 0xC5, 0xE7, 0x5D, 0xF7, 0x52, 0x44, 0x93, 0xC7, 0x7A, 0xB4, 0x32, 0xEA, 0xA1, 0xF7, 0x8B, 0xEB, 0x48, 0x21, 0x0A, 0x00, 0x04, 0xA9, 0x86, 0xFB, 0x45, 0x39, 0xDC, 0x2F, 0xCE, 0x77, 0xA7, 0xB8, 0x4E, 0xEF, 0x9D, 0xB2, 0x06, 0xCC, 0x30, 0x37, 0xCC, 0x01, 0x48, 0xD5, 0xE6, 0x80, 0x18, 0xEF, 0x9D, 0x19, 0x48, 0x7D, 0x7B, 0xB0, 0xFC, 0xEE, 0x38, 0x52, 0x4F, 0xC6, 0x91, 0x8A, 0xBA, 0x17, 0x72, 0xB3, 0x84, 0xB6, 0x06, 0xD0, 0xD6, 0xB3, 0x71, 0xC4, 0xDC, 0x77, 0x1C, 0x19, 0xC7, 0xD4, 0xC6, 0x8F, 0xA9, 0x16, 0x86, 0xE8, 0x0C, 0x5E, 0x03, 0x68, 0x15, 0x80, 0xCA, 0xA6, 0x63, 0xEA, 0x19, 0xE0, 0xF2, 0xDB, 0x37, 0x8C, 0x7F, 0x10, 0x5F, 0xA8, 0xF5, 0x14, 0x9D, 0xFC, 0xF9, 0xFA, 0xF8, 0x1F, 0xBD, 0xDD, 0xBF, 0xF3, 0x0D, 0xF0, 0x5F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82, 0x21, 0xC4, 0x23, 0x93, 0x89, 0x0A, 0x00, 0x00, };
//Dirección IP
IPAddress apIP(192, 168, 10, 1);
//----Declaración de handles----//
void handleRoot() {
  server.sendHeader ("content-encoding","gzip");
  server.send_P ( 200, "text/html", index_html, sizeof(index_html));   
}
void handleLogo(){
  server.sendHeader("content-encoding","gzip");
  server.send_P(200,"image/gif",lumi_logo,sizeof(lumi_logo));
}
void handleCss() {
  server.sendHeader("content-encoding","gzip");
  server.send_P ( 200, "text/css", style_css, sizeof(style_css));
}
void handleEncender(){
  server.sendHeader("content-encoding","gzip");
  server.send_P ( 200, "text/html", index_html, sizeof(index_html));   
  digitalWrite(pinRELE, HIGH);
  //Serial.println("mande encender");
  Serial.write('E'); //encender-
}
void handleApagar(){
  server.sendHeader("content-encoding","gzip");
  server.send_P ( 200, "text/html", index_html, sizeof(index_html));   
  digitalWrite(pinRELE, LOW);
  //Serial.println("mande apagar");
  Serial.write('A'); // apagar- 
}
void setup(void){
  WiFi.hostname(WiFi_hostname);
  WiFi.mode(WIFI_AP);
  WiFi.softAPConfig(apIP, apIP, IPAddress(255, 255, 255, 0)); // if you want to configure another IP address
  WiFi.softAP(ssid, password);
  WiFi.begin();
  /* Setup the DNS server redirecting all the domains to the apIP */
  dnsServer.setErrorReplyCode(DNSReplyCode::NoError);
  dnsServer.start(DNS_PORT, "*", apIP);
  /* Setup web pages: root, wifi config pages, SO captive portal detectors and not found. */
  server.begin(); 
  pinMode(pinRELE, OUTPUT);
  pinMode(pinLED, OUTPUT);
  digitalWrite(pinRELE, LOW);
  digitalWrite(pinLED, HIGH); // Inicializamos el pin que va al relé, apagado
  Serial.begin(115200);
  //----Página raíz ----//
  server.on("/", handleRoot);
  //----Hoja de estilo----//
  server.on("/lumistyle.css",handleCss);   
  //----Página de relé encendido----//
  server.on("/encender", handleEncender);
  //----Página de relé apagado----//
  server.on("/apagar", handleApagar);
  //----Carga de logo----//
  server.on("/logo_transparente.png", handleLogo);
  //----Arrancamos el servidor----//
  server.begin();
}
void loop(void){
  dnsServer.processNextRequest();
  server.handleClient();
  //----Leemos datos ingresados por hardware----//
  if (Serial.available() > 0)
  {
    incomingByte = Serial.read();
    if(incomingByte == 'O')  // "ON" 
    {
      digitalWrite(pinRELE, HIGH);
      delay(500);
    }
    if(incomingByte == 'S') // "STOP"
    {
      digitalWrite(pinRELE, LOW);
      delay(500);
    }
  }
}         
